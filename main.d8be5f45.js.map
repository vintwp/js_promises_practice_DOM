{"version":3,"sources":["scripts/main.js"],"names":["showNotification","inputMessage","message","document","createElement","isError","Error","classList","add","setAttribute","innerHTML","String","replace","body","append","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","secondPromise","then","success","catch","error","thirdPromise","all"],"mappings":";AAAA,aAEA,IAAMA,EAAmB,SAACC,GAClBC,IAAAA,EAAUC,SAASC,cAAc,OACjCC,EAAUJ,aAAwBK,MAExCJ,EAAQK,UAAUC,IACbH,GAAAA,OAAAA,EAAU,UAAY,YAE3BH,EAAQO,aAAa,UAAW,gBAEhCP,EAAQQ,UACJL,EAAUM,OAAOV,GAAcW,QAAQ,UAAW,IAAMX,EAE5DE,SAASU,KAAKC,OAAOZ,IAGjBa,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCf,SAASgB,iBAAiB,QAAS,WACjCF,EAAQ,gCAGVG,WAAW,WACTF,EAAO,IAAIZ,MAAM,gCAChB,OAGCe,EAAgB,IAAIL,QAAQ,SAACC,EAASC,GAC1Cf,SAASgB,iBAAiB,QAAS,WACjCF,EAAQ,iCAGVd,SAASgB,iBAAiB,cAAe,WACvCF,EAAQ,mCAIZF,EACGO,KAAK,SAAAC,GACJvB,EAAiBuB,KAElBC,MAAM,SAAAC,GACLzB,EAAiByB,KAGrBJ,EACGC,KAAK,SAAAC,GACJvB,EAAiBuB,KAElBC,MAAM,SAAAC,GACLzB,EAAiByB,KAGrB,IAAMC,EAAeV,QAAQW,IAAI,CAC/B,IAAIX,QAAQ,SAACC,EAASC,GACpBf,OAAAA,SAASgB,iBAAiB,QAAS,WACjCF,EAAQ,kCAGZ,IAAID,QAAQ,SAACC,EAASC,GACpBf,OAAAA,SAASgB,iBAAiB,cAAe,WACvCF,EAAQ,oCAKdS,EACGJ,KAAK,SAAAC,GAAWvB,OAAAA,EAAiBuB,EAAQ,MACzCC,MAAM,SAAAC,GAASzB,OAAAA,EAAiByB","file":"main.d8be5f45.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst showNotification = (inputMessage) => {\n  const message = document.createElement('div');\n  const isError = inputMessage instanceof Error;\n\n  message.classList.add(\n    `${isError ? 'warning' : 'success'}`\n  );\n  message.setAttribute('data-qa', 'notification');\n\n  message.innerHTML\n    = isError ? String(inputMessage).replace('Error: ', '') : inputMessage;\n\n  document.body.append(message);\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  document.addEventListener('contextmenu', () => {\n    resolve('Second promise was resolved');\n  });\n});\n\nfirstPromise\n  .then(success => {\n    showNotification(success);\n  })\n  .catch(error => {\n    showNotification(error);\n  });\n\nsecondPromise\n  .then(success => {\n    showNotification(success);\n  })\n  .catch(error => {\n    showNotification(error);\n  });\n\nconst thirdPromise = Promise.all([\n  new Promise((resolve, reject) =>\n    document.addEventListener('click', () => {\n      resolve('Third promise was resolved');\n    })\n  ),\n  new Promise((resolve, reject) =>\n    document.addEventListener('contextmenu', () => {\n      resolve('Third promise was resolved');\n    })\n  ),\n]);\n\nthirdPromise\n  .then(success => showNotification(success[0]))\n  .catch(error => showNotification(error));\n"]}